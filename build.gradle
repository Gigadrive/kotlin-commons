plugins {
    id "org.jetbrains.dokka" version "1.4.0"
    id "org.jetbrains.kotlin.jvm" version "1.4.20"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

def javaVersion = JavaVersion.VERSION_1_8

group "com.gigadrivegroup"
version "1.0-SNAPSHOT"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url "https://jitpack.io" }
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.16"
    annotationProcessor "org.projectlombok:lombok:1.18.16"

    testCompileOnly "org.projectlombok:lombok:1.18.16"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.16"

    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

kotlin {
    explicitApi()
}

java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    withJavadocJar()
    withSourcesJar()
}

task dokkaJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from new File(buildDir, "/dokka/javadoc/")
}

task dokkaSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

tasks.shadowJar {
    minimize() // only shades the classes that are actually needed
}

tasks.build {
    dependsOn(shadowJar)
}